

- evaporation_from_irrigation
edwinhs@int1.bullx:/scratch-shared/edwinvua/pcrglobwb2_output_gmd_paper_rerun_201903XX_05min_using_consistent_pcraster/05min/non-natural/begin_from_1958/M53/netcdf$ ls -lah evaporation_from_irrigation_annuaTot_output.nc
-rw-r--r-- 1 edwinvua edwinvua 2.6M Feb 23 06:53 evaporation_from_irrigation_annuaTot_output.nc

python merge_netcdf.py /scratch-shared/edwinvua/pcrglobwb2_output_gmd_paper_rerun_201903XX_05min_using_consistent_pcraster/05min/non-natural/begin_from_1958/ /scratch-shared/edwinhs/calculate_irr_return_flow/evaporation_from_irr/ outAnnuaTotNC 1958-12-31 2015-12-31 evaporation_from_irrigation NETCDF4 True 1 Global


# input directory:

# list of netcdf files that will be merged:
netcdfList = str(sys.argv[6])
print(netcdfList)
netcdfList = list(set(netcdfList.split(",")))
if file_type == "outDailyTotNC": netcdfList = ['%s_dailyTot_output.nc'%var for var in netcdfList]
if file_type == "outMonthTotNC": netcdfList = ['%s_monthTot_output.nc'%var for var in netcdfList]
if file_type == "outMonthAvgNC": netcdfList = ['%s_monthAvg_output.nc'%var for var in netcdfList]
if file_type == "outMonthEndNC": netcdfList = ['%s_monthEnd_output.nc'%var for var in netcdfList]
if file_type == "outAnnuaTotNC": netcdfList = ['%s_annuaTot_output.nc'%var for var in netcdfList]
if file_type == "outAnnuaAvgNC": netcdfList = ['%s_annuaAvg_output.nc'%var for var in netcdfList]
if file_type == "outAnnuaEndNC": netcdfList = ['%s_annuaEnd_output.nc'%var for var in netcdfList]

if file_type == "outMonthMaxNC": netcdfList = ['%s_monthMax_output.nc'%var for var in netcdfList]
if file_type == "outAnnuaMaxNC": netcdfList = ['%s_annuaMax_output.nc'%var for var in netcdfList]

# netcdf format and zlib option:
ncFormat   = str(sys.argv[7])
using_zlib = str(sys.argv[8])

# maximum number of cores that will be used
max_number_of_cores = int(sys.argv[9])

# number of cores that will be used
ncores = min(len(netcdfList), max_number_of_cores)

# clone areas
areas = str(sys.argv[10])
if areas == "Global":
    areas = ['M%02d'%i for i in range(1,54,1)]
else:
    areas = list(set(areas.split(",")))




- livestock
edwinhs@int1.bullx:/scratch-shared/edwinvua/pcrglobwb2_output_gmd_paper_rerun_201903XX_05min_using_consistent_pcraster/05min/non-natural/begin_from_1958/M53/netcdf$ ls -lah livestockWaterWithdrawal_*
-rw-r--r-- 1 edwinvua edwinvua 2.8M Feb 23 06:53 livestockWaterWithdrawal_annuaTot_output.nc
-rw-r--r-- 1 edwinvua edwinvua  33M Feb 23 06:53 livestockWaterWithdrawal_monthTot_output.nc

irrigationWaterWithdrawal

Formula A:
- irrigation_water_consumption = evaporation_from_irrigation * irrigationWaterWithdrawal / (precipitation + irrigationWaterWithdrawal) 
- irrigation_return_flow = irrigationWaterWithdrawal  - irrigation_water_consumption 

Formula B:
- irrigation_water_consumption = irrigation_efficiency * irrigationWaterWithdrawal  
- irrigation_return_flow = irrigationWaterWithdrawal  - irrigation_water_consumption 
- irrigation_return_flow = (1 - irrigation_efficiency) * irrigationWaterWithdrawal

Steps:
1. Calculate the return flow at the annual resolution. 
2. Downscale step 1 to the monthly resolution with the formula B.

